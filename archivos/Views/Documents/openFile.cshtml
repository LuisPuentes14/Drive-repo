@{
    ViewData["Title"] = "Home Page";
}



<script src="~/pdfjs-3.4.120-legacy-dist/build/pdf.js"></script>
<script src="~/pdfjs-3.4.120-legacy-dist/build/pdf.sandbox.js"></script>
<script src="~/pdfjs-3.4.120-legacy-dist/build/pdf.worker.js"></script>


<div class="text-center">
    <h1 class="display-4">Documentos</h1>
    
</div>




<style>

    .modalViewDoc {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
    }

    .modal-contenido {
        background-color: #fff;
        margin: 2% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 55%;
        height: 800px;
        overflow: auto;
    }

   

</style>




<div id="pdf-modal" class="modalViewDoc">


    <div class="modal-contenido">
        <span class="close">&times;</span>
        <div id="pdf-container"></div>
    </div>
</div>


<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">
    Agregar carpeta
</button>



<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#ModalArchivo">
    Agregar archivo
</button>


<br />
<br />

@{
    if (ViewBag.idVolver == 0)
    {
        <a asp-controller="Documents" asp-action="getPrincipalFilesCliente" asp-route-idCliente="@ViewBag.cliente"><img src="~/img/volver-flecha.png" class="img" /></a>
    }
    else if (ViewBag.idVolver != 0)
    {
        <a asp-controller="Documents" asp-action="openFile" asp-route-idCliente="@ViewBag.cliente" asp-route-idDocPadre="@ViewBag.idVolver"><img src="~/img/volver-flecha.png" class="img" /></a>
    }
}
<br />
<br />

<div class="sub-menu1-container py-5">

    <table id="tableList" class="table" >


        <thead>
            <tr>
                <th>Id</th>
                <th>Documento</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var intem in ViewBag.files)
                {
                    <tr>

                        <td >
                        
                            @{
                                string[] extencion = intem.nombre_documento_hijo.ToString().Split(".");

                                if (extencion[extencion.Length - 1] == "pdf")
                                {
                                    <img src="~/img/pdf.png" style="width:25px" />
                                }
                                else if (extencion[extencion.Length - 1] == "docx")
                                {
                                    <img src="~/img/palabra.png" style="width:25px" />
                                }
                                else if (extencion[extencion.Length - 1] == "xlsx")
                                {
                                    <img src="~/img/excel.png" style="width:25px" />
                                }
                                else                                
                                {
                                    <img src="~/img/carpeta.png" style="width:25px" />
                                }
                            }
                        
                        
                        </td>
                      
                        <td>@intem.nombre_documento_hijo </td>

                        <td>

                            @{
                                //si esa rchivo
                                if (intem.id_tipo_documento == 2)
                                {
                                    <button type="button" onclick="preViewDoc(this)" class="btn" data-content-cliente="@intem.id_cliente" data-content-idHijo="@intem.id_documento_hijo" data-content-idPadre="@intem.id_documento_padre"><img src="~/img/ver-archivo.png" style="width:25px; height:25px" /></button>
                                    <a asp-controller="Documents" asp-action="dowloandFile" asp-route-idCliente="@intem.id_cliente" asp-route-idHijo="@intem.id_documento_hijo" asp-route-idPadre="@intem.id_documento_padre"><img src="~/img/descarga.png" style="width:25px; height:25px" /></a>
                                }
                                // si es carpeta
                                else
                                {
                                    @*El Hijo se vuelve padre para consultar los siguientes archivos*@
                                    <a asp-controller="Documents"  class="btn" asp-action="openFile" asp-route-idCliente="@intem.id_cliente" asp-route-idDocPadre="@intem.id_documento_hijo"><img src="~/img/abrir-documento.png" style="width:25px; height:25px" /></a>
                                }


                            }

                            <button type="button" onclick="deleteFolder(this)" class="btn" data-content-cliente="@intem.id_cliente" data-content-idPadre="@intem.id_documento_hijo">  <img src="~/img/delete.png" style="width:25px; height:25px" /></button>

                        </td>

                    </tr>
                }
            }
        </tbody>

    </table>



</div>




<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Agregar Carpeta</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <div class="mb-3">
                    <input type="hidden" class="form-control" id="idCliente" name="idCliente">
                    <label for="nameDoc" class="form-label">Nombre de carpeta</label>
                    <input type="text" class="form-control" id="nameDoc" name="nameFolder">
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" id="newDocButton" data-bs-dismiss="modal" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="ModalArchivo" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Agregar archivo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <div class="mb-3">
                    <input type="hidden" class="form-control" id="idCliente" name="idCliente">
                    <label for="archivosubido" class="form-label">Agregar archivo</label>
                    <br />
                    <input type="file" id="archivosubido" name="archivosubido">
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" id="newFileButton" data-bs-dismiss="modal" class="btn btn-primary">Guardar</button>
            </div>
        </div>
    </div>
</div>





@section Scripts{


    <script>

        let table = new DataTable('#tableList', {
           responsive:true,
            language: {
                url: "https://cdn.datatables.net/plug-ins/1.11.5/i18n/es-ES.json"
            },
        });

    </script>
    @*previsualizar pdf*@

    <script>
        function preViewDoc(element) {

            let data = {
                id_documento_padre: element.dataset.contentIdpadre,
                id_cliente: element.dataset.contentCliente,
                id_documento_hijo: element.dataset.contentIdhijo,
            }


            var modal = document.getElementById("pdf-modal");
            var span = document.getElementsByClassName("close")[0];

            modal.style.display = "block";

            span.onclick = function () {
                modal.style.display = "none";
            }

            console.log(data)

            var pdfUrl = "../Documents/getFileBytes?idCliente=" + data.id_cliente + "&idPadre=" + data.id_documento_padre + "&idHijo=" + data.id_documento_hijo;
            var pdfjsLib = window['pdfjs-dist/build/pdf'];
            pdfjsLib.GlobalWorkerOptions.workerSrc = '/pdfjs-dist/build/pdf.worker.js';
            var loadingTask = pdfjsLib.getDocument(pdfUrl);
            loadingTask.promise.then(function (pdf) {

                var pages = pdf.numPages
                console.log(pdf.numPages)

                for (var i = 1; i < pages + 1; i++) {
                    console.log("El valor de i es: " + i);

                    pdf.getPage(i).then(function (page) {
                        var scale = 1.5;
                        var viewport = page.getViewport({ scale: scale });
                        var canvas = document.createElement("canvas");
                        var context = canvas.getContext("2d");
                        canvas.height = viewport.height;
                        canvas.width = 950;
                        var renderContext = {
                            canvasContext: context,
                            viewport: viewport
                        };
                        page.render(renderContext).promise.then(function () {
                            var pdfContainer = document.getElementById("pdf-container");
                            pdfContainer.appendChild(canvas);
                        });
                    });




                }


            });


        }

    </script>





    @*Agregar carpetas*@
    <script>



        let newFolderButton = document.getElementById("newDocButton")

        newFolderButton.addEventListener("click", sendNewFolder);

        function sendNewFolder() {

            let nameDoc = document.getElementById("nameDoc").value;

            let data = {
                id_cliente: @ViewBag.cliente,
                id_documento_padre: @ViewBag.idDocPadre,
                nombre_documento_hijo: nameDoc,
                id_tipo_documento: 1,
                isPrincipal: false

            }

            const options = {
                method: 'POST',
                body: JSON.stringify(data),
                headers: {
                    'Content-Type': 'application/json'
                }
            };

            fetch("@Url.Action("addFolder","Documents")", options)
                .then(response => response.json())
                .then(data => {

                    Swal.fire({
                        position: 'center',
                        icon: 'success',
                        title: 'Your work has been saved',
                        showConfirmButton: false,
                        timer: 1500
                    }).then((result) => {


                        location.reload();


                    })


                })
                .catch(error => console.error(error));


        }

    </script>

    @*Eliminar carpeta y arhivos*@

    <script>



        function deleteFolder(element) {


            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {

                    let data = {
                        id_documento_padre: element.dataset.contentIdpadre,
                        id_cliente: element.dataset.contentCliente,

                    }


                    const options = {
                        method: 'POST',
                        body: JSON.stringify(data),
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    };


                    fetch("@Url.Action("deleteDocByFolder","Documents")", options)
                        .then(response => response.json())
                        .then(data => {
                            console.log(data)
                            Swal.fire({
                                position: 'center',
                                icon: 'success',
                                title: 'Your work has been saved',
                                showConfirmButton: false,
                                timer: 1500
                            }).then((result) => {

                                location.reload();

                            })


                        })
                        .catch(error => console.error(error));

                }
            })
        }



    </script>


    @*agregar archivos*@

    <script>

        let newFileButton = document.getElementById("newFileButton")

        newFileButton.addEventListener("click", sendNewFile);


        function sendNewFile() {


            var fileInput = document.getElementById('archivosubido');
            var archivo = fileInput.files[0];

            var formData = new FormData();
            formData.append('archivo', archivo);
            formData.append('id_cliente', @ViewBag.cliente);
            formData.append('id_documento_padre', @ViewBag.idDocPadre);


            const options = {
                method: 'POST',
                body: formData
            };


            fetch("@Url.Action("addFile","Documents")", options)
                .then(response => response.json())
                .then(data => {
                    console.log(data)
                    Swal.fire({
                        position: 'center',
                        icon: 'success',
                        title: 'Your work has been saved',
                        showConfirmButton: false,
                        timer: 1500
                    }).then((result) => {


                        location.reload();


                    })


                })
                .catch(error => console.error(error));

        }



    </script>


}
